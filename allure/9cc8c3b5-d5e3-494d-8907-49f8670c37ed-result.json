{"name": "test_operations_with_task_by_auth_user", "status": "broken", "statusDetails": {"message": "psycopg2.errors.UndefinedTable: relation \"tasks\" does not exist\nLINE 1: SELECT * FROM tasks WHERE id = 27\n                      ^", "trace": "db_connection = <connection object at 0x7fba88c0c180; dsn: 'user=postgres password=xxx dbname=taskmanager host=db port=5432', closed: 0>\n\n    @allure.feature(\"Tasks\")\n    @allure.story(\"Perform operations on task\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    \n    def test_operations_with_task_by_auth_user(db_connection):\n    \n        session = requests.Session()\n        with allure.step(\"Authenticating user\"):\n            auth = AuthenticateUser()\n            auth.login_user(valid_user, session)\n            assert auth.response.status_code == 200, f\"Login failed: {auth.response_json}\"\n    \n        with allure.step(\"Creating a new task\"):\n            crud_operations_with_task = Task()\n            crud_operations_with_task.new_task(valid_new_task, session)\n    \n        with allure.step(\"Checking task creation response is 201\"):\n            crud_operations_with_task.check_response_is_201(), \"Task is not created\"\n            task_id = crud_operations_with_task.get_task_id()\n            allure.attach(str(task_id), name=\"Task ID\", attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Find task in db\"):\n            cursor = db_connection.cursor()\n>           cursor.execute('SELECT * FROM tasks WHERE id = %s', (task_id,))\nE           psycopg2.errors.UndefinedTable: relation \"tasks\" does not exist\nE           LINE 1: SELECT * FROM tasks WHERE id = 27\nE                                 ^\n\ntests/api/tests/test_full_cycle.py:102: UndefinedTable"}, "steps": [{"name": "Authenticating user", "status": "passed", "start": 1742322634575, "stop": 1742322634755}, {"name": "Creating a new task", "status": "passed", "start": 1742322634755, "stop": 1742322634769}, {"name": "Checking task creation response is 201", "status": "passed", "attachments": [{"name": "Task ID", "source": "3e0a283b-ccd6-4b65-a3b5-6f3b49174a2e-attachment.txt", "type": "text/plain"}], "start": 1742322634769, "stop": 1742322634774}, {"name": "Find task in db", "status": "broken", "statusDetails": {"message": "psycopg2.errors.UndefinedTable: relation \"tasks\" does not exist\nLINE 1: SELECT * FROM tasks WHERE id = 27\n                      ^\n\n", "trace": "  File \"/app/tests/api/tests/test_full_cycle.py\", line 102, in test_operations_with_task_by_auth_user\n    cursor.execute('SELECT * FROM tasks WHERE id = %s', (task_id,))\n"}, "start": 1742322634774, "stop": 1742322634776}], "start": 1742322634574, "stop": 1742322634781, "uuid": "5aeee243-0939-4fbd-9bd7-b6ff22110308", "historyId": "37c04f7a70f88db285b69559bcf4e67e", "testCaseId": "37c04f7a70f88db285b69559bcf4e67e", "fullName": "tests.api.tests.test_full_cycle#test_operations_with_task_by_auth_user", "labels": [{"name": "story", "value": "Perform operations on task"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "Tasks"}, {"name": "parentSuite", "value": "tests.api.tests"}, {"name": "suite", "value": "test_full_cycle"}, {"name": "host", "value": "40a248f3f556"}, {"name": "thread", "value": "19-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.tests.test_full_cycle"}]}