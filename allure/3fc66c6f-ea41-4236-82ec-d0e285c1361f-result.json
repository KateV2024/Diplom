{"name": "test_create_invalid_task_by_auth_user", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 400, got 201", "trace": "@allure.feature(\"Tasks\")\n    @allure.story(\"Create an invalid task by authenticated user\")\n    @allure.severity(allure.severity_level.MINOR)\n    \n    def test_create_invalid_task_by_auth_user():\n        session = requests.Session()\n        with allure.step(\"Authenticating user\"):\n            auth = AuthenticateUser()\n            auth.login_user(valid_user, session)\n            assert auth.response.status_code == 200, f\"Login failed: {auth.response_json}\"\n        with allure.step(\"Creating task with invalid data\"):\n            new_invalid_task_by_auth_user = Task()\n            new_invalid_task_by_auth_user.new_task(invalid_new_task, session)\n        with allure.step(\"Checking response status is 400\"):\n>           new_invalid_task_by_auth_user.check_response_is_400(), \"Task is successfully created with empty values\"\n\ntests/api/tests/test_full_cycle.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.api.endpoints.operations_with_task.Task object at 0x7f591d4380d0>\n\n    def check_response_is_400(self):\n>       assert self.response.status_code == 400,\\\n            f'Expected 400, got {self.response.status_code}'\nE       AssertionError: Expected 400, got 201\n\ntests/api/endpoints/base_endpoint.py:27: AssertionError"}, "steps": [{"name": "Authenticating user", "status": "passed", "start": 1742320419296, "stop": 1742320419458}, {"name": "Creating task with invalid data", "status": "passed", "start": 1742320419458, "stop": 1742320419481}, {"name": "Checking response status is 400", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 400, got 201\n", "trace": "  File \"/app/tests/api/tests/test_full_cycle.py\", line 75, in test_create_invalid_task_by_auth_user\n    new_invalid_task_by_auth_user.check_response_is_400(), \"Task is successfully created with empty values\"\n  File \"/app/tests/api/endpoints/base_endpoint.py\", line 27, in check_response_is_400\n    assert self.response.status_code == 400,\\\n"}, "start": 1742320419481, "stop": 1742320419481}], "start": 1742320419296, "stop": 1742320419488, "uuid": "96c3e3e2-0da8-49c1-bab0-1caef54f77eb", "historyId": "fe00128b11a958af629ed9a4610e1079", "testCaseId": "fe00128b11a958af629ed9a4610e1079", "fullName": "tests.api.tests.test_full_cycle#test_create_invalid_task_by_auth_user", "labels": [{"name": "severity", "value": "minor"}, {"name": "feature", "value": "Tasks"}, {"name": "story", "value": "Create an invalid task by authenticated user"}, {"name": "parentSuite", "value": "tests.api.tests"}, {"name": "suite", "value": "test_full_cycle"}, {"name": "host", "value": "59bdee5a033a"}, {"name": "thread", "value": "19-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.tests.test_full_cycle"}]}