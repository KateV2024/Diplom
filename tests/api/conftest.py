import pytest
import requests
import psycopg2
import os
from tests.api.endpoints.authentication import AuthenticateUser
from tests.api.endpoints.create_user import CreateUser
from tests.api.payload.payloads import valid_user


DB_PARAMS = {
    'dbname': os.environ.get('POSTGRES_DB', 'taskmanager'),
    'user': os.environ.get('POSTGRES_USER', 'postgres'),
    'password': os.environ.get('POSTGRES_PASSWORD', 'postgres'),
    #local
    'host': os.environ.get('POSTGRES_HOST', 'localhost'),
    #Docker
    # 'host': os.environ.get('POSTGRES_HOST', 'db'),
    # 'port': os.environ.get('POSTGRES_PORT', '5432')
}

@pytest.fixture(scope="function")
def db_connection():
    print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...")
    conn = psycopg2.connect(**DB_PARAMS)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
    yield conn  # –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç
    conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
    print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ.")

@pytest.fixture
def create_user():
    return CreateUser()


@pytest.fixture
def authenticated_user():
    session = requests.Session()
    auth = AuthenticateUser()
    auth.login_user(valid_user, session)
    auth.check_response_is_200()
    return auth, session

@pytest.fixture(params=[
    (valid_user, True)
])
def test_data(request):
    return request.param