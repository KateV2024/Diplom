{"name": "test_operations_with_task_by_auth_user", "status": "broken", "statusDetails": {"message": "psycopg2.OperationalError: could not translate host name \"db\" to address: Name or service not known", "trace": "@pytest.fixture(scope=\"function\")\n    def db_connection():\n        \"\"\"Фикстура для подключения к БД\"\"\"\n        print(\"🔌 Подключение к БД...\")\n>       conn = psycopg2.connect(**DB_PARAMS)  # Устанавливаем соединение с БД\n\ntests\\api\\conftest.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndsn = 'dbname=taskmanager user=postgres password=postgres host=db port=5432', connection_factory = None, cursor_factory = None\nkwargs = {'dbname': 'taskmanager', 'host': 'db', 'password': 'postgres', 'port': '5432', ...}, kwasync = {}\n\n    def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n        \"\"\"\n        Create a new database connection.\n    \n        The connection parameters can be specified as a string:\n    \n            conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n    \n        or using a set of keyword arguments:\n    \n            conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n    \n        Or as a mix of both. The basic connection parameters are:\n    \n        - *dbname*: the database name\n        - *database*: the database name (only as keyword argument)\n        - *user*: user name used to authenticate\n        - *password*: password used to authenticate\n        - *host*: database host address (defaults to UNIX socket if not provided)\n        - *port*: connection port number (defaults to 5432 if not provided)\n    \n        Using the *connection_factory* parameter a different class or connections\n        factory can be specified. It should be a callable object taking a dsn\n        argument.\n    \n        Using the *cursor_factory* parameter, a new default cursor factory will be\n        used by cursor().\n    \n        Using *async*=True an asynchronous connection will be created. *async_* is\n        a valid alias (for Python versions where ``async`` is a keyword).\n    \n        Any other keyword parameter will be passed to the underlying client\n        library: the list of supported parameters depends on the library version.\n    \n        \"\"\"\n        kwasync = {}\n        if 'async' in kwargs:\n            kwasync['async'] = kwargs.pop('async')\n        if 'async_' in kwargs:\n            kwasync['async_'] = kwargs.pop('async_')\n    \n        dsn = _ext.make_dsn(dsn, **kwargs)\n>       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\nE       psycopg2.OperationalError: could not translate host name \"db\" to address: Name or service not known\n\n.venv\\Lib\\site-packages\\psycopg2\\__init__.py:135: OperationalError"}, "attachments": [{"name": "stdout", "source": "a3533a7c-49db-466e-8e97-3b854ee50b2f-attachment.txt", "type": "text/plain"}], "start": 1742463118528, "stop": 1742463118528, "uuid": "bd670bb7-2c37-4810-b0bd-da67187a27eb", "historyId": "37c04f7a70f88db285b69559bcf4e67e", "testCaseId": "37c04f7a70f88db285b69559bcf4e67e", "fullName": "tests.api.tests.test_full_cycle#test_operations_with_task_by_auth_user", "labels": [{"name": "story", "value": "Perform operations on task"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "Tasks"}, {"name": "parentSuite", "value": "tests.api.tests"}, {"name": "suite", "value": "test_full_cycle"}, {"name": "host", "value": "Katie"}, {"name": "thread", "value": "9184-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api.tests.test_full_cycle"}]}