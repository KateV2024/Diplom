{"name": "test_register_user[409025-411111]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x007DC7F3+24435]\n\t(No symbol) [0x00762074]\n\t(No symbol) [0x006306E3]\n\t(No symbol) [0x00678B39]\n\t(No symbol) [0x00678E8B]\n\t(No symbol) [0x006C1AC2]\n\t(No symbol) [0x0069D804]\n\t(No symbol) [0x006BF20A]\n\t(No symbol) [0x0069D5B6]\n\t(No symbol) [0x0066C54F]\n\t(No symbol) [0x0066D894]\n\tGetHandleVerifier [0x00AE70A3+3213347]\n\tGetHandleVerifier [0x00AFB0C9+3295305]\n\tGetHandleVerifier [0x00AF558C+3271948]\n\tGetHandleVerifier [0x00877360+658144]\n\t(No symbol) [0x0076B27D]\n\t(No symbol) [0x00768208]\n\t(No symbol) [0x007683A9]\n\t(No symbol) [0x0075AAC0]\n\tBaseThreadInitThunk [0x75265D49+25]\n\tRtlInitializeExceptionChain [0x7740CDEB+107]\n\tRtlGetAppContainerNamedObjectPath [0x7740CD71+561]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b91a5b4d0ee3a5ca1b527a6efa866667\")>, username = '409025', password = '411111'\n\n    @pytest.mark.parametrize(\n        \"username, password\",\n        [\n            ('409025', '411111'),\n            ('', 'password'),\n            ('979597', ''),\n            ('', ''),\n            ('4', '48998987')\n        ]\n    )\n    \n    @allure.feature(\"User Registration\")\n    @allure.story(\"Register User with Different Credentials\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    \n    def test_register_user(driver, username, password):\n        with allure.step(\"Navigate to the registration page\"):\n            register_user = RegisterPage(driver)\n            register_user.get_register_page()\n            assert \"register\" in driver.current_url, \"User is not on the registration page\"\n    \n        with allure.step(\"Enter username and password\"):\n            register_user.enter_username(username)\n            register_user.enter_password(password)\n    \n        with allure.step(\"Click the register button\"):\n            register_user.click_register()\n    \n        with allure.step(\"Validate registration outcome\"):\n            if username == '':\n                assert register_user.get_error_message(), \"Registration without username\"\n            elif password == '':\n                assert \"Пароль обязателен\" in register_user.get_error_message(), \"Registration without password\"\n            elif password == '' and username == '':\n                assert \"Пароль обязателен\" in register_user.get_error_message(), \"Registration without password\"\n                assert \"Имя пользователя обязательно\" in register_user.get_error_message(), \"Registration without username\"\n            elif len(password) < 6 and len(username) < 3:\n                assert \"Пароль должен содержать не менее 6 символов\" in register_user.get_error_message(), \\\n                    \"Registration with short password\"\n                assert \"Имя пользователя должно содержать не менее 3 символов\" in register_user.get_error_message(), \\\n                    \"Registration with short username\"\n            elif len(password) < 6:\n                assert \"Пароль должен содержать не менее 6 символов\" in register_user.get_error_message(), \\\n                    \"Registration with short password\"\n            elif len(username) < 3:\n                assert \"Имя пользователя должно содержать не менее 3 символов\" in register_user.get_error_message(), \\\n                    \"Registration with short username\"\n            else:\n>               assert register_user.get_success_message(), \"User is not registered\"\n\ntests\\ui\\ui_tests\\test_user.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests\\ui\\pages\\register_page.py:26: in get_success_message\n    return self.find_element(self.SUCCESS_MESSAGE).text\ntests\\ui\\pages\\base_page.py:15: in find_element\n    return WebDriverWait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b91a5b4d0ee3a5ca1b527a6efa866667\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001A9AB6AC180>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x007DC7F3+24435]\nE       \t(No symbol) [0x00762074]\nE       \t(No symbol) [0x006306E3]\nE       \t(No symbol) [0x00678B39]\nE       \t(No symbol) [0x00678E8B]\nE       \t(No symbol) [0x006C1AC2]\nE       \t(No symbol) [0x0069D804]\nE       \t(No symbol) [0x006BF20A]\nE       \t(No symbol) [0x0069D5B6]\nE       \t(No symbol) [0x0066C54F]\nE       \t(No symbol) [0x0066D894]\nE       \tGetHandleVerifier [0x00AE70A3+3213347]\nE       \tGetHandleVerifier [0x00AFB0C9+3295305]\nE       \tGetHandleVerifier [0x00AF558C+3271948]\nE       \tGetHandleVerifier [0x00877360+658144]\nE       \t(No symbol) [0x0076B27D]\nE       \t(No symbol) [0x00768208]\nE       \t(No symbol) [0x007683A9]\nE       \t(No symbol) [0x0075AAC0]\nE       \tBaseThreadInitThunk [0x75265D49+25]\nE       \tRtlInitializeExceptionChain [0x7740CDEB+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x7740CD71+561]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "steps": [{"name": "Navigate to the registration page", "status": "passed", "start": 1742635895213, "stop": 1742635895494}, {"name": "Enter username and password", "status": "passed", "start": 1742635895494, "stop": 1742635896373}, {"name": "Click the register button", "status": "passed", "start": 1742635896373, "stop": 1742635896659}, {"name": "Validate registration outcome", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x007DC7F3+24435]\n\t(No symbol) [0x00762074]\n\t(No symbol) [0x006306E3]\n\t(No symbol) [0x00678B39]\n\t(No symbol) [0x00678E8B]\n\t(No symbol) [0x006C1AC2]\n\t(No symbol) [0x0069D804]\n\t(No symbol) [0x006BF20A]\n\t(No symbol) [0x0069D5B6]\n\t(No symbol) [0x0066C54F]\n\t(No symbol) [0x0066D894]\n\tGetHandleVerifier [0x00AE70A3+3213347]\n\tGetHandleVerifier [0x00AFB0C9+3295305]\n\tGetHandleVerifier [0x00AF558C+3271948]\n\tGetHandleVerifier [0x00877360+658144]\n\t(No symbol) [0x0076B27D]\n\t(No symbol) [0x00768208]\n\t(No symbol) [0x007683A9]\n\t(No symbol) [0x0075AAC0]\n\tBaseThreadInitThunk [0x75265D49+25]\n\tRtlInitializeExceptionChain [0x7740CDEB+107]\n\tRtlGetAppContainerNamedObjectPath [0x7740CD71+561]\n\n", "trace": "  File \"C:\\Users\\volch\\Desktop\\Diplom\\tests\\ui\\ui_tests\\test_user.py\", line 56, in test_register_user\n    assert register_user.get_success_message(), \"User is not registered\"\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\volch\\Desktop\\Diplom\\tests\\ui\\pages\\register_page.py\", line 26, in get_success_message\n    return self.find_element(self.SUCCESS_MESSAGE).text\n           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\volch\\Desktop\\Diplom\\tests\\ui\\pages\\base_page.py\", line 15, in find_element\n    return WebDriverWait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\volch\\Desktop\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1742635896659, "stop": 1742635906678}], "parameters": [{"name": "username", "value": "'409025'"}, {"name": "password", "value": "'411111'"}], "start": 1742635895213, "stop": 1742635906712, "uuid": "358c2ced-893c-4802-9b57-f9dd5c4b992c", "historyId": "4d06e980d1eb920d44817cbb1bf063d1", "testCaseId": "d3a0d8749f3024f950470e666d4f9d32", "fullName": "tests.ui.ui_tests.test_user#test_register_user", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "User Registration"}, {"name": "story", "value": "Register User with Different Credentials"}, {"name": "parentSuite", "value": "tests.ui.ui_tests"}, {"name": "suite", "value": "test_user"}, {"name": "host", "value": "Katie"}, {"name": "thread", "value": "2260-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.ui_tests.test_user"}]}